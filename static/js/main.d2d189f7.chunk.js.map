{"version":3,"sources":["component/prime_table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Primetable","props","useState","primes","setPrimes","no_primes","setNo_Primes","isPrime","num","i","s","Math","sqrt","useEffect","n","arr","push","length","display","dap","forEach","da","j","heads","Header","accessor","Cell","row","style","width","height","backgroundColor","borderRadius","value","col","id","maxWidth","filterable","index","className","type","placeholder","onChange","event","target","defaultValue","data","columns","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAKaA,EAAc,SAACC,GAExB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,SAAAC,GACZ,IAAI,IAAIC,EAAI,EAAGC,EAAIC,KAAKC,KAAKJ,GAAMC,GAAKC,EAAGD,IACvC,GAAGD,EAAMC,IAAM,EAAG,OAAO,EAC7B,OAAOD,EAAM,GAkBjBK,qBAAU,YAfM,SAACC,GAEb,IADA,IAAIC,EAAM,CAAC,GACDN,EAAI,EAAGA,EAAI,MACZF,EAAQE,IACTM,EAAIC,KAAKP,KAETM,EAAIE,QAAQH,IAJOL,GAAG,GAU9BL,EAAUW,GAING,CAAQb,KACb,CAACA,IAIJ,IAAMc,EAAM,GACZhB,EAAOiB,SAAS,SAAAX,GACZ,IAAMY,EAAK,GACXlB,EAAOiB,SAAQ,SAAAE,GACXD,EAAGC,GAAKb,EAAEa,KAEdH,EAAIH,KAAKK,MAKb,IAAME,EAAQ,GACdpB,EAAOiB,SAAQ,SAAAX,GACXc,EAAMP,KAAK,CAACQ,OAAO,GAAD,OAAIf,GACtBgB,SAAS,GAAD,OAAIhB,GACZiB,KAAM,SAAAC,GAAG,OACL,qBACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,UACjBC,aAAc,OALlB,SAQCL,EAAIM,cAMb,IAAMC,EAAG,CACL,CACIV,OAAQ,GACRW,GAAI,MACJC,SAAU,GACVC,YAAY,EACZX,KAAM,SAACC,GACH,OAAO,8BAAOxB,EAAOwB,EAAIW,YAP5B,OAcEf,GAQf,OACI,gCACO,uBACKgB,UAAU,aACVC,KAAK,SACLC,YAAY,mBACZC,SAXS,SAACC,GACdrC,EAAaqC,EAAMC,OAAOX,QAWtBY,aAAc,KAGtB,qBAAKN,UAAU,YAAf,SAEI,cAAC,IAAD,CACIO,KAAM3B,EACN4B,QAASb,U,MC1FVc,MATf,WACE,OACE,sBAAKT,UAAU,MAAf,UACG,6CACD,cAAC,EAAD,QCISU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2d189f7.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport ReactTable from 'react-table-v6'\r\nimport 'react-table-v6/react-table.css'\r\nimport './prime_table.css';\r\n\r\nexport const Primetable =  (props) => {\r\n  \r\n    const [primes, setPrimes] = useState([]); \r\n    const [no_primes, setNo_Primes] = useState(10);\r\n\r\n    const isPrime = num => {\r\n        for(let i = 2, s = Math.sqrt(num); i <= s; i++)\r\n            if(num % i === 0) return false; \r\n        return num > 1;\r\n    }\r\n            \r\n    const display = (n) => {\r\n        var arr = [2];\r\n        for ( var i = 3; i < 1000; i+=2 ) {\r\n            if ( isPrime(i) ) {\r\n                arr.push(i);\r\n            }\r\n            if (arr.length>=n){\r\n\r\n                break\r\n            }\r\n        }\r\n        // console.log(arr); \r\n        setPrimes(arr)\r\n    }\r\n            \r\n    useEffect(() => {\r\n            display(no_primes);  \r\n    }, [no_primes]);\r\n\r\n\r\n\r\n    const dap = []\r\n    primes.forEach( i  => {\r\n        const da = {}\r\n        primes.forEach(j => {\r\n            da[j] = i*j\r\n        })\r\n        dap.push(da)\r\n    })\r\n\r\n    // console.log(dap)\r\n\r\n    const heads = []\r\n    primes.forEach(i=>{\r\n        heads.push({Header:`${i}`,\r\n        accessor:`${i}`,\r\n        Cell: row => (\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: '#dadada',\r\n                borderRadius: '2px'\r\n              }}\r\n            >\r\n            {row.value}\r\n            </div>\r\n          )})\r\n    })\r\n    // console.log(heads)\r\n\r\n    const col = [   \r\n        {\r\n            Header: \"\",\r\n            id: \"row\",\r\n            maxWidth: 50,\r\n            filterable: false,\r\n            Cell: (row) => {\r\n                return <div >{primes[row.index]}</div>;\r\n            }\r\n            },\r\n            // {Header:'2',accessor: '2'},\r\n            // {Header:'3',accessor: '3'},\r\n            // {Header:'5',accessor: '5'},\r\n            // {Header:'7',accessor: '7'},\r\n            ...heads\r\n        ]\r\n\r\n    const handleChange = (event)=>{\r\n            setNo_Primes(event.target.value)\r\n        }\r\n           \r\n                \r\nreturn (\r\n    <div> \r\n           <input\r\n                className='search-box'\r\n                type='number'\r\n                placeholder='number of primes'\r\n                onChange={handleChange}\r\n                defaultValue={10}\r\n            />\r\n\r\n        <div className='card-list'>\r\n\r\n            <ReactTable \r\n                data={dap}\r\n                columns={col}\r\n            />\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n","// import logo from './logo.svg';\nimport   {Primetable} from './component/prime_table'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <h1>Prime Table</h1>\n      <Primetable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}